{"version":3,"sources":["assets/images/logo.png","components/HeaderComponent.js","components/ContactComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseURL.js","components/HomeComponent.js","components/MenuComponent.js","components/DishDetailComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/reducer.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","logo","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","required","val","length","maxLength","len","minLength","isNum","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","firstname","lastname","telnum","email","message","JSON","stringify","resetFeedbackForm","Breadcrumb","BreadcrumbItem","active","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","Footer","Loading","baseURL","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","style","CardImg","image","aspectRatio","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","object","CardImgOverlay","body","heading","Menu","menu","dishes","map","validRating","CommentForm","postComment","dishId","rating","comment","RenderDishDetail","RenderDishComments","comments","element","dateString","date","dateObj","Date","newDate","toLocaleString","month","getDay","getFullYear","author","DishDetail","RenderLeader","Media","tag","left","middle","About","leaders","CardHeader","title","list","ADD_DISHES","DISHES_LOADING","DISHES_FAILED","ADD_COMMENT","ADD_COMMENTS","COMMENTS_FAILED","ADD_PROMO","PROMOS_LOADING","PROMOS_FAILED","ADD_LEADERS","LEADERS_LOADING","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promotions","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promo","exact","match","parseInt","params","commentsErrMess","AboutComponent","location","key","withRouter","connect","firstName","lastName","telNum","newFeedback","actions","reset","promos","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oZAAe,MAA0B,iC,OCsI1BA,E,kDArHX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAW,EACXC,aAAa,GAEjB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBARJ,E,6CAWnB,WACIG,KAAKC,SAAS,CACVP,WAAYM,KAAKP,MAAMC,c,yBAI/B,WACIM,KAAKC,SAAS,CACVN,aAAcK,KAAKP,MAAME,gB,yBAIjC,SAAYO,GACRF,KAAKF,cACLK,MAAM,aAAeH,KAAKI,SAASC,MAC/B,cAAgBL,KAAKM,SAASD,MAC9B,iBAAmBL,KAAKO,SAASC,SACrCN,EAAMO,mB,oBAGV,WAAU,IAAD,OACL,OAEI,cADA,CACC,IAAMC,SAAP,WACI,cAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,KAApB,SACI,sBAAKC,UAAU,YAAf,UACI,cAACC,EAAA,EAAD,CAAeC,QAAShB,KAAKJ,YAC7B,cAACqB,EAAA,EAAD,CAAaH,UAAU,UAAUI,KAAK,IAAtC,SACI,qBAAKC,IAAKC,EAAMC,OAAO,KAAKC,MAAM,KAC7BC,IAAI,2BAEb,eAACC,EAAA,EAAD,CAAUC,OAAQzB,KAAKP,MAAMC,UAAWgC,QAAM,EAA9C,UACI,eAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,UACI,cAACE,EAAA,EAAD,UACI,eAAC,IAAD,CAASd,UAAU,WAAWe,GAAG,QAAjC,UACI,sBAAMf,UAAU,qBADpB,aAIJ,cAACc,EAAA,EAAD,UACI,eAAC,IAAD,CAASd,UAAU,WAAWe,GAAG,WAAjC,UACI,sBAAMf,UAAU,qBADpB,iBAIJ,cAACc,EAAA,EAAD,UACI,eAAC,IAAD,CAASd,UAAU,WAAWe,GAAG,QAAjC,UACI,sBAAMf,UAAU,qBADpB,aAIJ,cAACc,EAAA,EAAD,UACI,eAAC,IAAD,CAASd,UAAU,WAAWe,GAAG,aAAjC,UACI,sBAAMf,UAAU,6BADpB,sBAKR,cAACa,EAAA,EAAD,CAAKb,UAAU,UAAUY,QAAM,EAA/B,SACI,cAACE,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,CAAQC,SAAO,EAACf,QAAShB,KAAKF,YAA9B,SACI,sBAAMgB,UAAU,sBAAhB,mCAQxB,cAACkB,EAAA,EAAD,UACI,qBAAKlB,UAAU,YAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,sDACA,6DAMhB,eAACmB,EAAA,EAAD,CAAOR,OAAQzB,KAAKP,MAAME,YAAauC,OAAQlC,KAAKF,YAApD,UACI,cAACqC,EAAA,EAAD,CAAaD,OAAQlC,KAAKF,YAA1B,mBACA,cAACsC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,SAAUtC,KAAKD,YAArB,UACI,eAACwC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,sBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,GAAG,WAAWC,KAAK,WAC/BC,SAAU,SAACC,GAAD,OAAW,EAAK3C,SAAW2C,QAEhD,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,sBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,GAAG,WAAWC,KAAK,WACnCC,SAAU,SAACC,GAAD,OAAW,EAAKzC,SAAWyC,QAEhD,cAACR,EAAA,EAAD,CAAWS,OAAK,EAAhB,SACI,eAACR,EAAA,EAAD,CAAOQ,OAAK,EAAZ,UACI,cAACN,EAAA,EAAD,CAAOC,KAAK,WAAWE,KAAK,WACrBC,SAAU,SAACC,GAAD,OAAW,EAAKxC,SAAWwC,KAFhD,mBAMJ,cAACjB,EAAA,EAAD,CAAQa,KAAK,SAAStC,MAAM,SAAS4C,MAAM,UAA3C,kC,GA7GPC,a,4CCXfC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDE,EAAQ,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAC/BQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IA4M9DU,E,kDAzMX,WAAYtE,GAAQ,IAAD,8BACf,cAAMA,IACDuE,aAAe,EAAKA,aAAalE,KAAlB,gBAFL,E,gDAKnB,SAAamE,GACThE,KAAKR,MAAMyE,aAAaD,EAAOE,UAAWF,EAAOG,SAAUH,EAAOI,OAAQJ,EAAOK,MAAOL,EAAOM,SAC/FnE,MAAM,WAAaoE,KAAKC,UAAUR,IAClChE,KAAKR,MAAMiF,sB,oBAIf,WAAU,IAAD,OACL,OACI,sBAAK3D,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,eAAC4D,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAM9C,GAAG,QAAT,oBAEJ,cAAC8C,EAAA,EAAD,CAAgBC,QAAM,EAAtB,2BAEJ,sBAAK9D,UAAU,SAAf,UACI,6CACA,6BAKR,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wDAEJ,sBAAKA,UAAU,8BAAf,UACI,6CACA,gEAC6B,uBAD7B,2BAE4B,uBAF5B,YAGa,uBACT,mBAAGA,UAAU,gBAJjB,mBAIgD,uBAC5C,mBAAGA,UAAU,cALjB,mBAK8C,uBAC1C,mBAAGA,UAAU,mBANjB,KAMqC,mBAAGI,KAAK,4BAAR,sCAGzC,qBAAKJ,UAAU,8BAAf,SACI,uDAEJ,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,YAAY+D,KAAK,QAAhC,UACI,oBAAGA,KAAK,SAAS/D,UAAU,kBAAkBI,KAAK,mBAAlD,UACI,mBAAGJ,UAAU,gBADjB,WAGA,oBAAG+D,KAAK,SAAS/D,UAAU,eAA3B,UACI,mBAAGA,UAAU,gBADjB,YAGA,oBAAG+D,KAAK,SAAS/D,UAAU,kBAAkBI,KAAK,4BAAlD,UACI,mBAAGJ,UAAU,qBADjB,oBAQZ,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,yDAEJ,qBAAKA,UAAU,kBAAf,SACI,eAAC,OAAD,CAAMgE,MAAM,WAAWxC,SAAU,SAAC0B,GAAD,OAAY,EAAKD,aAAaC,IAA/D,UACI,eAACe,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,YAAYuC,GAAI,EAA/B,wBACA,eAACC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACI,cAAC,UAAQE,KAAT,CAAcJ,MAAM,aACNlC,GAAG,YACHC,KAAK,YACLsC,YAAY,GACZrE,UAAU,eACVsE,WAAY,CACRjC,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAEvC,cAAC,SAAD,CAAQxC,UAAU,cACVgE,MAAM,aACNO,KAAK,UACLC,SAAU,CACNnC,SAAU,WACVK,UAAW,oCACXF,UAAW,yCApBnC,IAwBI,eAACyB,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,WAAWuC,GAAI,EAA9B,uBACA,eAACC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACI,cAAC,UAAQE,KAAT,CAAcJ,MAAM,YACNlC,GAAG,WACHC,KAAK,WACLsC,YAAY,GACZrE,UAAU,eACVsE,WAAY,CACRjC,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAEvC,cAAC,SAAD,CAAQxC,UAAU,cACVgE,MAAM,YACNO,KAAK,UACLC,SAAU,CACNnC,SAAU,WACVK,UAAW,oCACXF,UAAW,yCA3CnC,IA+CI,eAACyB,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,SAASuC,GAAI,EAA5B,0BACA,eAACC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACI,cAAC,UAAQE,KAAT,CAAcJ,MAAM,UACNlC,GAAG,SACHC,KAAK,SACLsC,YAAY,GACZrE,UAAU,eACVsE,WAAY,CACRjC,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,IACrBG,WAElB,cAAC,SAAD,CAAQ3C,UAAU,cACVgE,MAAM,UACNO,KAAK,UACLC,SAAU,CACNnC,SAAU,WACVK,UAAW,iCACXF,UAAW,sCAnEnC,IAuEI,eAACyB,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,QAAQuC,GAAI,EAA3B,oBACA,eAACC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACI,cAAC,UAAQE,KAAT,CAAcJ,MAAM,SACNlC,GAAG,QACHC,KAAK,QACLsC,YAAY,GACZrE,UAAU,eACVsE,WAAY,CAACjC,WAAUS,gBACrC,cAAC,SAAD,CAAQ9C,UAAU,cACVgE,MAAM,SACNO,KAAK,UACLC,SAAU,CACNnC,SAAU,WACVS,WAAY,iCArFpC,IAyFI,eAACmB,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAACmE,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAM,EAAGC,OAAQ,GAA3B,SACI,qBAAK1E,UAAU,aAAf,SACI,eAAC0B,EAAA,EAAD,CAAOQ,OAAK,EAAZ,UACI,cAAC,UAAQyC,SAAT,CAAkBX,MAAM,SAASjC,KAAK,QAAQ/B,UAAU,qBACvD,IACD,gEAIZ,cAACmE,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAM,EAAGC,OAAQ,GAA3B,SACI,eAAC,UAAQE,OAAT,CAAgBZ,MAAM,eACNjC,KAAK,cACL/B,UAAU,eAF1B,UAGI,0CACA,oDAxGhB,IA4GI,eAACiE,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,UAAUuC,GAAI,EAA7B,2BACA,cAACC,EAAA,EAAD,CAAKD,GAAI,GAAT,SACI,cAAC,UAAQW,SAAT,CAAkBb,MAAM,WACNlC,GAAG,UACHC,KAAK,UACL+C,KAAK,KACL9E,UAAU,eACVqE,YAAY,UApH1C,IAuHI,cAACJ,EAAA,EAAD,CAAKjE,UAAU,aAAf,SACI,cAACmE,EAAA,EAAD,CAAKD,GAAI,CAACO,KAAM,GAAIC,OAAQ,GAA5B,SACI,cAAC1D,EAAA,EAAD,CAAQa,KAAK,SAASM,MAAM,UAA5B,+BAzHZ,mB,GArEFC,aCoDP2C,MA5Df,SAAgBrG,GACZ,OACI,qBAAKsB,UAAU,SAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,uCACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,cAAC,IAAD,CAAMe,GAAG,QAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,wBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,QAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,aAAT,gCAGZ,sBAAKf,UAAU,iBAAf,UACI,6CACA,gEAC6B,uBAD7B,2BAE4B,uBAF5B,YAGa,uBACT,mBAAGA,UAAU,sBAJjB,mBAIsD,uBAClD,mBAAGA,UAAU,oBALjB,mBAKoD,uBAChD,mBAAGA,UAAU,yBANjB,KAM2C,mBAAGI,KAAK,4BAAR,sCAI/C,qBAAKJ,UAAU,oCAAf,SACI,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,iCAAiCI,KAAK,sBAAnD,SACI,mBAAGJ,UAAU,wBAEjB,mBAAGA,UAAU,mCACVI,KAAK,0CADR,SAEI,mBAAGJ,UAAU,qBAEjB,mBAAGA,UAAU,mCAAmCI,KAAK,8BAArD,SACI,mBAAGJ,UAAU,qBAEjB,mBAAGA,UAAU,kCAAkCI,KAAK,sBAApD,SACI,mBAAGJ,UAAU,oBAEjB,mBAAGA,UAAU,iCAAiCI,KAAK,sBAAnD,SACI,mBAAGJ,UAAU,oBAEjB,mBAAGA,UAAU,sBAAsBI,KAAK,UAAxC,SACI,mBAAGJ,UAAU,+BAK7B,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oF,sDCrDXgF,EAAU,WACnB,OACI,sBAAKhF,UAAU,SAAf,UACI,sBAAMA,UAAU,oDAChB,+CCNCiF,EAAU,yB,QCMvB,SAASC,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAClC,OAAID,EAEI,cAAC,EAAD,IAEGC,EAEH,6BAAKA,IAIT,cAAC,gBAAD,CAAeC,IAAE,EAACC,eAAgB,CAACC,cAAe,+BAAlD,SACI,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAClF,MAAO,SAArB,UACI,cAACmF,EAAA,EAAD,CAAStF,IAAK4E,EAAUE,EAAKS,MAAOnF,IAAK0E,EAAKpD,KAAM8D,YAAY,QAChE,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAYZ,EAAKpD,OAChBoD,EAAKa,YAAc,cAACC,EAAA,EAAD,UAAed,EAAKa,cAA8B,KACtE,cAACE,EAAA,EAAD,UAAWf,EAAKgB,sBA+BrBC,MAxBf,SAAc1H,GACV,OACI,qBAAKsB,UAAU,YAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAACkF,EAAD,CAAYC,KAAMzG,EAAM2H,KACZjB,UAAW1G,EAAM4H,cACjBjB,QAAS3G,EAAM6H,kBAE/B,qBAAKvG,UAAU,uBAAf,SACI,cAACkF,EAAD,CAAYC,KAAMzG,EAAM8H,UACZpB,UAAW1G,EAAM+H,cACjBpB,QAAS3G,EAAMgI,kBAE/B,qBAAK1G,UAAU,uBAAf,SACI,cAACkF,EAAD,CAAYC,KAAMzG,EAAMiI,OACZvB,UAAW1G,EAAMkI,eACjBvB,QAAS3G,EAAMmI,yB,UCzC/C,SAASC,GAAT,GAAiC,IAART,EAAO,EAAPA,KACrB,OACI,cAAC,IAAD,CAAMtF,GAAE,gBAAWsF,EAAKvE,IAAxB,SACI,eAAC2D,EAAA,EAAD,CAAMC,MAAO,CAAClF,MAAO,SAArB,UACI,cAACmF,EAAA,EAAD,CAASnF,MAAM,OAAOuG,QAAM,EAAC1G,IAAK4E,EAAUoB,EAAKT,MAAOnF,IAAK4F,EAAKtE,OAClE,cAACiF,GAAA,EAAD,CAAgBC,MAAI,EAACjH,UAAU,OAA/B,SACI,cAAC+F,EAAA,EAAD,CAAWmB,SAAO,EAAlB,SAAoBb,EAAKtE,cAO7C,IAoDeoF,GApDF,SAACzI,GACV,IAAM0I,EAAO1I,EAAM2I,OAAOA,OAAOC,KAAI,SAACjB,GAClC,OACI,qBAAKrG,UAAU,YAAf,SACI,8BACI,cAAC8G,GAAD,CAAgBT,KAAMA,KADhBA,EAAKvE,SAM3B,OAAIpD,EAAM2I,OAAOjC,UAET,qBAAKpF,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,QAKPtB,EAAM2I,OAAOhC,QAEd,qBAAKrF,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,6BAAKtB,EAAM2I,OAAOhC,cAO1B,sBAAKrF,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,eAAC4D,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAM9C,GAAG,QAAT,oBAEJ,cAAC8C,EAAA,EAAD,CAAgBC,QAAM,EAAtB,qBAEJ,sBAAK9D,UAAU,SAAf,UACI,sCACA,6BAGR,qBAAKA,UAAU,MAAf,SACKoH,QCpDf/E,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BgF,GAAc,SAACjF,GAAD,MAAiB,KAARA,GACvBE,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAGvD+E,G,kDACF,WAAY9I,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTE,aAAa,GAEjB,EAAKG,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKkE,aAAe,EAAKA,aAAalE,KAAlB,gBANL,E,+CASnB,WACIG,KAAKC,SAAS,CACVN,aAAcK,KAAKP,MAAME,gB,0BAIjC,SAAaqE,GACThE,KAAKF,cACLE,KAAKR,MAAM+I,YAAYvI,KAAKR,MAAMgJ,OAAQxE,EAAOyE,OAAQzE,EAAOnB,KAAMmB,EAAO0E,W,oBAGjF,WAAU,IAvBKnF,EAuBN,OACL,OACI,eAAC,IAAM7C,SAAP,WACI,cAACoB,EAAA,EAAD,CAAQC,SAAO,EAACf,QAAShB,KAAKF,YAA9B,SACI,sBAAMgB,UAAU,qBAAhB,gCAEJ,eAACmB,EAAA,EAAD,CAAOR,OAAQzB,KAAKP,MAAME,YAAauC,OAAQlC,KAAKF,YAApD,UACI,cAACqC,EAAA,EAAD,CAAaD,OAAQlC,KAAKF,YAA1B,8BACA,cAACsC,EAAA,EAAD,UACI,eAAC,YAAD,CAAWE,SAAU,SAAC0B,GAAD,OAAY,EAAKD,aAAaC,IAAnD,UACI,eAACe,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,SAAf,oBACA,eAAC,UAAQiD,OAAT,CAAgBZ,MAAM,UACNlC,GAAG,SACHC,KAAK,SACL/B,UAAU,eACVsE,WAAY,CAACjC,YAAUkF,gBACvBvF,SAAU,SAACC,GAAD,OAAW,EAAK0F,OAAS1F,GALnD,UAMI,iCAAS,KACT,uCACA,uCACA,uCACA,uCACA,0CAEJ,cAAC,SAAD,CAAQjC,UAAU,cACVgE,MAAM,UACNO,KAAK,UACLC,SAAU,CAAC+C,YAAa,wDAEpC,eAACtD,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,OAAf,kBACA,cAAC,UAAQyC,KAAT,CAAcJ,MAAM,QACNlC,GAAG,OACHC,KAAK,OACL/B,UAAU,eACVsE,WAAY,CACRjC,YACAK,WA7D/BD,EA6DoD,EA7D5C,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IA8DXD,UAAWA,GAAU,KAEzBR,SAAU,SAACC,GAAD,OAAW,EAAKF,KAAOE,KAC/C,cAAC,SAAD,CAAQjC,UAAU,cACVgE,MAAM,QACNO,KAAK,UACLC,SAAU,CACNnC,SAAU,WACVK,UAAW,oCACXF,UAAW,sCAG3B,eAACyB,EAAA,EAAD,CAAKjE,UAAU,aAAf,UACI,cAAC0B,EAAA,EAAD,CAAOC,QAAQ,UAAf,qBACA,cAAC,UAAQkD,SAAT,CAAkBb,MAAM,WACNlC,GAAG,UACHC,KAAK,UACL+C,KAAK,IACL9E,UAAU,eACVsE,WAAY,CAACjC,aACbL,SAAU,SAACC,GAAD,OAAW,EAAK2F,QAAU3F,KACtD,cAAC,SAAD,CAAQjC,UAAU,cACVgE,MAAM,WACNO,KAAK,UACLC,SAAU,CAACnC,SAAU,iBAEjC,cAACrB,EAAA,EAAD,CAAQa,KAAK,SAAStC,MAAM,SAAS4C,MAAM,UAA3C,mC,GAtFFC,aA+F1B,SAASyF,GAAT,GAAmC,IAARxB,EAAO,EAAPA,KACvB,OACI,cAACZ,EAAA,EAAD,CAAMzF,UAAU,sBAAhB,SACI,eAAC,OAAD,CAAMsF,IAAE,EAAR,UACI,cAACK,EAAA,EAAD,CAASnF,MAAM,OAAOuG,QAAM,EAAC1G,IAAK4E,EAAUoB,EAAKT,MAAOnF,IAAK4F,EAAKtE,OAClE,eAAC+D,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWmB,SAAO,EAAlB,SAAoBb,EAAKtE,OACzB,cAACmE,EAAA,EAAD,UAAWG,EAAKF,sBAOpC,SAAS2B,GAAT,GAA8D,IAAjCC,EAAgC,EAAhCA,SAAUN,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,OAChD,OAAgB,MAAZK,EAEI,cAACtC,EAAA,EAAD,CAAMzF,UAAU,sBAAhB,SACI,eAAC8F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWmB,SAAO,EAAlB,sBACI,cAAChB,EAAA,EAAD,UACI,cAAC,UAAD,CAASZ,IAAE,EAAX,SACKyC,EAAST,KAAI,SAACU,GACX,IAAMC,EAAaD,EAAQE,KACrBC,EAAU,IAAIC,KAAKH,GACnBI,EAAO,UACNF,EAAQG,eAAe,KAAM,CAACC,MAAO,UAD/B,8DAECJ,EAAQK,SAFT,aAEsBL,EAAQM,eAC3C,OACI,cAAC,OAAD,CAAMnD,IAAE,EAAR,SACI,+BACI,4BAAI0C,EAAQJ,UACZ,oCAAOI,EAAQU,OAAf,KAAyBL,OAFpBL,EAAQlG,aASzC,cAAC,GAAD,CAAa4F,OAAQA,EAAQD,YAAaA,SAK9C,wBAIhB,IAkDekB,GAlDI,SAACjK,GAChB,OAAIA,EAAM0G,UAEF,qBAAKpF,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,QAILtB,EAAM2G,QAET,qBAAKrF,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,6BAAKtB,EAAM2G,cAID,OAAf3G,EAAM2H,KAET,sBAAKrG,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,eAAC4D,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAM9C,GAAG,QAAT,oBAEJ,cAAC8C,EAAA,EAAD,CAAgBC,QAAM,EAAtB,SAAwBpF,EAAM2H,KAAKtE,UAEvC,sBAAK/B,UAAU,SAAf,UACI,6BAAKtB,EAAM2H,KAAKtE,OAChB,6BAGR,sBAAK/B,UAAU,MAAf,UACI,cAAC6H,GAAD,CAAkBxB,KAAM3H,EAAM2H,OAC9B,cAACyB,GAAD,CAAoBC,SAAUrJ,EAAMqJ,SAChBN,YAAa/I,EAAM+I,YACnBC,OAAQhJ,EAAM2H,KAAKvE,WAO/C,yB,oBCnMZ,SAAS8G,GAAT,GAAiC,IAAVjC,EAAS,EAATA,OACnB,OACI,qBAAqB3G,UAAU,cAA/B,SACI,cAAC6I,GAAA,EAAD,CAAOC,IAAI,KAAX,SACI,cAAC,UAAD,CAASxD,IAAE,EAAX,SACI,eAAC,OAAD,CAAMA,IAAE,EAAR,UACI,cAACuD,GAAA,EAAD,CAAOE,MAAI,EAACC,QAAM,EAAlB,SACI,cAACH,GAAA,EAAD,CAAO9B,QAAM,EAAC1G,IAAK4E,EAAU0B,EAAOf,MAAOnF,IAAKkG,MAEpD,eAACkC,GAAA,EAAD,CAAO5B,MAAI,EAACjH,UAAU,OAAtB,UACI,cAAC6I,GAAA,EAAD,CAAO3B,SAAO,EAAd,SAAgBP,EAAO5E,OACvB,4BAAI4E,EAAOX,cACX,4BAAIW,EAAOR,yBAVrBQ,EAAO7E,IAmBzB,IAkGemH,GAlGD,SAACvK,GACX,IAAMwK,EAAUxK,EAAMwK,QAAQA,QAAQ5B,KAAI,SAACX,GACvC,OACI,cAACiC,GAAD,CAAcjC,OAAQA,OAG9B,OAAIjI,EAAMwK,QAAQ9D,UAEV,qBAAKpF,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,QAILtB,EAAMwK,QAAQ7D,QAEjB,qBAAKrF,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,6BAAKtB,EAAMwK,QAAQ7D,cAQ/B,sBAAKrF,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,eAAC4D,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAgB,cAAC,IAAD,CAAM9C,GAAG,QAAT,oBAChB,cAAC8C,EAAA,EAAD,CAAgBC,QAAM,EAAtB,yBAEJ,sBAAK9D,UAAU,SAAf,UACI,0CACA,6BAGR,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,6CACA,yaAKA,gFAAkD,gDAAlD,qIAIJ,qBAAKA,UAAU,kBAAf,SACI,eAACyF,EAAA,EAAD,WACI,cAAC0D,GAAA,EAAD,CAAYnJ,UAAU,wBAAtB,+BACA,cAAC8F,EAAA,EAAD,UACI,qBAAI9F,UAAU,UAAd,UACI,oBAAIA,UAAU,QAAd,qBACA,oBAAIA,UAAU,QAAd,yBACA,oBAAIA,UAAU,QAAd,gCACA,oBAAIA,UAAU,QAAd,gCACA,oBAAIA,UAAU,QAAd,kCACA,oBAAIA,UAAU,QAAd,wBACA,oBAAIA,UAAU,QAAd,uBACA,oBAAIA,UAAU,QAAd,0BAKhB,qBAAKA,UAAU,SAAf,SACI,cAACyF,EAAA,EAAD,UACI,cAACK,EAAA,EAAD,CAAU9F,UAAU,WAApB,SACI,6BAAYA,UAAU,aAAtB,UACI,mBAAGA,UAAU,OAAb,+FAEA,sBACA,4BACI,yBAAQA,UAAU,oBAAlB,wBACI,sBAAMoJ,MAAM,eAAZ,+FAS5B,sBAAKpJ,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wDAEJ,qBAAKA,UAAU,SAAf,SACI,cAAC6I,GAAA,EAAD,CAAOQ,MAAI,EAAX,SACKH,a,SCtHZI,GAAa,aACbC,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAc,cAEdC,GAAc,eACdC,GAAkB,kBAClBC,GAAY,YACZC,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAc,cACdC,GAAkB,kBAClBC,GAAiB,iBCJjBxC,GAAc,SAACC,EAAQC,EAAQe,EAAQd,GAAzB,OAAqC,SAACsC,GAC7D,IAAMC,EAAa,CACfzC,OAAQA,EACRC,OAAQA,EACRe,OAAQA,EACRd,QAASA,GAIb,OAFAuC,EAAWjC,MAAO,IAAIE,MAAOgC,cAEtBC,MAAMpF,EAAU,WAAY,CAC/BqF,OAAQ,OACRrD,KAAMxD,KAAKC,UAAUyG,GACrBI,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAM,IAAIC,MAAMD,EAAMpH,YAE7BiH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EAnCA,SAACtC,GAAD,MAAc,CACpC/F,KAAMoJ,GACNC,QAAStD,GAiCsBuD,CAAWT,OACrCU,OAAM,SAAAR,GACHS,QAAQC,IAAI,gBAAiBV,EAAMpH,SACnCnE,MAAM,4CAA8CuL,EAAMpH,cAoEzD8C,GAAgB,iBAAO,CAChCzE,KAAMoJ,KAGGM,GAAe,SAACC,GAAD,MAAc,CACtC3J,KAAMoJ,GACNC,QAASM,IAGAC,GAAY,SAACpE,GAAD,MAAa,CAClCxF,KAAMoJ,GACNC,QAAS7D,IAsBAqE,GAAiB,SAACF,GAAD,MAAc,CACxC3J,KAAMoJ,GACNC,QAASM,IAGAG,GAAc,SAAC5D,GAAD,MAAe,CACtClG,KAAMoJ,GACNC,QAASnD,IAuBAtB,GAAgB,iBAAO,CAChC5E,KAAMoJ,KAGGW,GAAe,SAACJ,GAAD,MAAc,CACtC3J,KAAMoJ,GACNC,QAASM,IAGAK,GAAY,SAACC,GAAD,MAAiB,CACtCjK,KAAMoJ,GACNC,QAASY,IAwBAlF,GAAiB,iBAAO,CACjC/E,KAAMoJ,KAGGc,GAAgB,SAACP,GAAD,MAAc,CACvC3J,KAAMoJ,GACNC,QAASM,IAGAQ,GAAa,SAAC9C,GAAD,MAAc,CACpCrH,KAAMoJ,GACNC,QAAShC,I,SCtKP+C,G,uKACF,WACI/M,KAAKR,MAAMwN,cACXhN,KAAKR,MAAMyN,gBACXjN,KAAKR,MAAM0N,cACXlN,KAAKR,MAAM2N,iB,oBAGf,WAAU,IAAD,OAgCL,OACI,gCACI,cAAC,EAAD,IACA,cAAC,mBAAD,UACI,cAAC,iBAAD,CAA6CC,WAAW,OAAOC,QAAS,IAAxE,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,UArCvB,WACb,OACI,cAAC,EAAD,CACIpG,KAAM,EAAK3H,MAAM2I,OAAOA,OAAOqF,QAAO,SAACrG,GAAD,OAAUA,EAAKsG,YAAU,GAC/DrG,cAAe,EAAK5H,MAAM2I,OAAOjC,UACjCmB,cAAe,EAAK7H,MAAM2I,OAAOhC,QACjCmB,UAAW,EAAK9H,MAAMoN,WAAWA,WAAWY,QAAO,SAACE,GAAD,OAAWA,EAAMD,YAAU,GAC9ElG,cAAe,EAAK/H,MAAMoN,WAAW1G,UACrCsB,cAAe,EAAKhI,MAAMoN,WAAWzG,QACrCsB,OAAQ,EAAKjI,MAAMwK,QAAQA,QAAQwD,QAAO,SAAC/F,GAAD,OAAYA,EAAOgG,YAAU,GACvE/F,eAAgB,EAAKlI,MAAMwK,QAAQ9D,UACnCyB,eAAgB,EAAKnI,MAAMwK,QAAQ7D,aA2B3B,cAAC,IAAD,CAAOwH,OAAK,EAACL,KAAK,QAAQC,UAAW,kBAAM,cAAC,GAAD,CAAMpF,OAAQ,EAAK3I,MAAM2I,YACpE,cAAC,IAAD,CAAOmF,KAAK,gBAAgBC,UAvB7B,SAAC,GAAa,IAAZK,EAAW,EAAXA,MACjB,OACI,cAAC,GAAD,CACIzG,KAAM,EAAK3H,MAAM2I,OAAOA,OAAOqF,QAAO,SAACrG,GAAD,OAClCA,EAAKvE,KAAOiL,SAASD,EAAME,OAAOtF,OAAQ,OAAK,GACnDtC,UAAW,EAAK1G,MAAM2I,OAAOjC,UAC7BC,QAAS,EAAK3G,MAAM2I,OAAOhC,QAC3B0C,SAAU,EAAKrJ,MAAMqJ,SAASA,SAAS2E,QAAO,SAAC9E,GAAD,OAC1CA,EAAQF,SAAWqF,SAASD,EAAME,OAAOtF,OAAQ,OACrDuF,gBAAiB,EAAKvO,MAAMqJ,SAAS1C,QACrCoC,YAAa,EAAK/I,MAAM+I,iBAchB,cAAC,IAAD,CAAO+E,KAAK,WAAWC,UAAW,kBAAM,cAACS,GAAD,CAAgBhE,QAAS,EAAKxK,MAAMwK,aAC5E,cAAC,IAAD,CAAO2D,OAAK,EAACL,KAAK,aACXC,UAAW,kBAAM,cAAC,EAAD,CAAS9I,kBAAmB,EAAKjF,MAAMiF,kBAC9BR,aAAc,EAAKzE,MAAMyE,kBAC1D,cAAC,IAAD,CAAUpC,GAAG,cATD7B,KAAKR,MAAMyO,SAASC,OAa5C,cAAC,EAAD,W,GAzDGhL,aA+DJiL,eAAWC,oBA9FF,SAAA3O,GACpB,MAAO,CACH0I,OAAQ1I,EAAM0I,OACdU,SAAUpJ,EAAMoJ,SAChB+D,WAAYnN,EAAMmN,WAClB5C,QAASvK,EAAMuK,YAII,SAACgB,GAAD,MAAe,CACtCzC,YAAa,SAACC,EAAQC,EAAQ5F,EAAM6F,GAAvB,OACTsC,EAASzC,GAAYC,EAAQC,EAAQ5F,EAAM6F,KAC/CzE,aAAc,SAACoK,EAAWC,EAAUC,EAAQlK,EAAOC,GAArC,OACV0G,EDgBoB,SAACqD,EAAWC,EAAUC,EAAQlK,EAAOC,GAArC,OAAiD,SAAC0G,GAC1E,IAAMwD,EAAc,CAChBH,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRlK,MAAOA,EACPC,QAASA,GAIb,OAFAkK,EAAYxF,MAAO,IAAIE,MAAOgC,cAEvBC,MAAMpF,EAAU,WAAY,CAC/BqF,OAAQ,OACRrD,KAAMxD,KAAKC,UAAUgK,GACrBnD,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAM,IAAIC,MAAMD,EAAMpH,YAE7BiH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EApCgB,CACtCrI,KD1CwB,eC2CxBqJ,QAkC2CR,OACtCU,OAAM,SAAAR,GACHS,QAAQC,IAAI,gBAAiBV,EAAMpH,SACnCnE,MAAM,6CAA+CuL,EAAMpH,aClDtDL,CAAaoK,EAAWC,EAAUC,EAAQlK,EAAOC,KAC9D0I,YAAa,WACThC,GDoDyB,SAACA,GAG9B,OAFAA,EAAS5D,IAAc,IAEhB+D,MAAMpF,EAAU,UAClBwF,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAM,IAAIC,MAAMD,EAAMpH,YAE7BiH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAApD,GAAM,OAAI6C,EAASuB,GAAUpE,OAClC+D,OAAM,SAAAR,GAAK,OAAIV,EAASqB,GAAaX,EAAMpH,iBCpEhDG,kBAAmB,WACfuG,EAASyD,UAAQC,MAAM,cAE3BzB,cAAe,WACXjC,GDiF2B,SAACA,GAChC,OAAOG,MAAMpF,EAAU,YAClBwF,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAM,IAAIC,MAAMD,EAAMpH,YAE7BiH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA1C,GAAQ,OAAImC,EAASyB,GAAY5D,OACtCqD,OAAM,SAAAR,GAAK,OAAIV,EAASwB,GAAed,EAAMpH,iBC/FlD4I,YAAa,WACTlC,GD2GyB,SAACA,GAE9B,OADAA,EAASzD,IAAc,IAChB4D,MAAMpF,EAAU,cAClBwF,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAM,IAAIC,MAAMD,EAAMpH,YAE7BiH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAoD,GAAM,OAAI3D,EAAS2B,GAAUgC,OAClCzC,OAAM,SAAAR,GAAK,OAAIV,EAAS0B,GAAahB,EAAMpH,iBC1HhD6I,aAAc,WACVnC,GD0I0B,SAACA,GAG/B,OAFAA,EAAStD,IAAe,IAEjByD,MAAMpF,EAAU,WAClBwF,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAM,IAAIC,MAAMD,EAAMpH,YAE7BiH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAvB,GAAO,OAAIgB,EAAS8B,GAAW9C,OACpCkC,OAAM,SAAAR,GAAK,OAAIV,EAAS6B,GAAcnB,EAAMpH,oBCzF3B8J,CAA6CrB,K,2BCjH1D6B,GAAS,WAAmE,IAAlEnP,EAAiE,uDAAzD,CAACyG,WAAW,EAAMC,QAAS,KAAMgC,OAAQ,IAAK0G,EAAW,uCACpF,OAAQA,EAAOlM,MACX,KAAKoJ,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS,KACTgC,OAAQ0G,EAAO7C,UAEvB,KAAKD,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS,KACTgC,OAAQ,KAEhB,KAAK4D,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS0I,EAAO7C,QAChB7D,OAAQ,KAEhB,QACI,OAAO1I,IAINqP,GAAW,WAAoD,IAAnDrP,EAAkD,uDAA1C,CAAC0G,QAAS,KAAM0C,SAAU,IAAKgG,EAAW,uCACvE,OAAQA,EAAOlM,MACX,KAAKoJ,GACD,IAAIrD,EAAUmG,EAAO7C,QACrB,OAAO,6BAAIvM,GAAX,IAAkBoJ,SAAUpJ,EAAMoJ,SAASkG,OAAOrG,KAEtD,KAAKqD,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS,KACT0C,SAAUgG,EAAO7C,UAGzB,KAAKD,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS0I,EAAO7C,QAChBnD,SAAU,KAGlB,QACI,OAAOpJ,IAINuP,GAAa,WAAuE,IAAtEvP,EAAqE,uDAA7D,CAACyG,WAAW,EAAMC,QAAS,KAAMyG,WAAY,IAAKiC,EAAW,uCAC5F,OAAQA,EAAOlM,MACX,KAAKoJ,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS,KACTyG,WAAYiC,EAAO7C,UAE3B,KAAKD,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS,KACTyG,WAAY,KAEpB,KAAKb,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS0I,EAAO7C,QAChBY,WAAY,KAEpB,QACI,OAAOnN,IAINwP,GAAU,WAAoE,IAAnExP,EAAkE,uDAA1D,CAACyG,WAAW,EAAMC,QAAS,KAAM6D,QAAS,IAAK6E,EAAW,uCACtF,OAAQA,EAAOlM,MACX,KAAKoJ,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS,KACT6D,QAAS6E,EAAO7C,UAExB,KAAKD,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS,KACT6D,QAAS,KAEjB,KAAK+B,GACD,OAAO,6BACAtM,GADP,IAEIyG,WAAW,EACXC,QAAS0I,EAAO7C,QAChBhC,QAAS,KAEjB,QACI,OAAOvK,I,+BC7GNyP,GAAkB,CAC3BhL,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACP8K,OAAO,EACPC,YAAa,OACb9K,QAAS,ICAP+K,GCCKC,uBACHC,2BAAgB,cACZpH,OAAQyG,GACR/F,SAAUiG,GACVlC,WAAYoC,GACZhF,QAASiF,IACNO,sBAAY,CAACC,SAAUP,OAE9BQ,2BAAgBC,KAAOC,ODOhBC,G,4JAbX,WACI,OACI,cAAC,YAAD,CAAUR,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,8BACI,cAAC,GAAD,c,GANNnM,aEGH4M,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SAKjDX,O","file":"static/js/main.3e5eda67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.23118273.png\";","import React, {Component} from \"react\";\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavbarToggler,\n    Collapse,\n    NavItem,\n    Jumbotron,\n    Modal,\n    ModalHeader,\n    Button, ModalBody, Form, FormGroup, Label, Input\n} from \"reactstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport logo from \"../assets/images/logo.png\"\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value +\n            \" Password: \" + this.password.value +\n            \" Remember me: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            //ReactFragment short form is <> ... </>\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src={logo} height=\"30\" width=\"41\"\n                                 alt=\"Ristorante Confusion\"/>\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"/> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"/> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"/> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"/> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"> Login </span>\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Confusion</h1>\n                                <p>Hungry and confused</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                       innerRef={(input) => this.username = input}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                       innerRef={(input) => this.password = input}/>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                           innerRef={(input) => this.remember = input}/>\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Col, Label, Row} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {Control, Form, Errors} from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNum = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.message)\n        alert(\"Success!\" + JSON.stringify(values))\n        this.props.resetFeedbackForm();\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contacts Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n                {/*Breadcrumb for navigation*/}\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br/>\n                            Clear Water Bay, Kowloon<br/>\n                            HONG KONG<br/>\n                            <i className=\"fa fa-phone\"/>: +852 1234 5678<br/>\n                            <i className=\"fa fa-fax\"/>: +852 8765 4321<br/>\n                            <i className=\"fa fa-envelope\"/>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\">\n                                <i className=\"fa fa-phone\"/> Call\n                            </a>\n                            <a role=\"button\" className=\"btn btn-info\">\n                                <i className=\"fa fa-skype\"/> Skype\n                            </a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\">\n                                <i className=\"fa fa-envelope-o\"/> Email\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                {/*Helpful information, address etc*/}\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\"\n                                                  id=\"firstname\"\n                                                  name=\"firstname\"\n                                                  placeholder=\"\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required,\n                                                      minLength: minLength(3),\n                                                      maxLength: maxLength(15)\n                                                  }}/>\n                                    <Errors className=\"text-danger\"\n                                            model=\".firstname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 3 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}/>\n                                </Col>\n                            </Row> {/*Firstname*/}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\"\n                                                  id=\"lastname\"\n                                                  name=\"lastname\"\n                                                  placeholder=\"\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required,\n                                                      minLength: minLength(3),\n                                                      maxLength: maxLength(15)\n                                                  }}/>\n                                    <Errors className=\"text-danger\"\n                                            model=\".lastname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 3 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}/>\n                                </Col>\n                            </Row> {/*Lastname*/}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\"\n                                                  id=\"telnum\"\n                                                  name=\"telnum\"\n                                                  placeholder=\"\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required,\n                                                      minLength: minLength(3),\n                                                      maxLength: maxLength(15),\n                                                      isNum\n                                                  }}/>\n                                    <Errors className=\"text-danger\"\n                                            model=\".telnum\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 3 numbers',\n                                                maxLength: 'Must be 15 numbers or less'\n                                            }}/>\n                                </Col>\n                            </Row> {/*Telnum*/}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>E-mail</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\"\n                                                  id=\"email\"\n                                                  name=\"email\"\n                                                  placeholder=\"\"\n                                                  className=\"form-control\"\n                                                  validators={{required, validEmail}}/>\n                                    <Errors className=\"text-danger\"\n                                            model=\".email\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                validEmail: 'Invalid email address'\n                                            }}/>\n                                </Col>\n                            </Row> {/*Email*/}\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\"/>\n                                            {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\"\n                                                    name=\"contactType\"\n                                                    className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>E-mail</option>\n                                    </Control.select>\n                                </Col>\n                            </Row> {/*Contact selector*/}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\"\n                                                      id=\"message\"\n                                                      name=\"message\"\n                                                      rows=\"12\"\n                                                      className=\"form-control\"\n                                                      placeholder=\"\"/>\n                                </Col>\n                            </Row> {/*Feedback box*/}\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">Send feedback</Button>\n                                </Col>\n                            </Row> {/*Submit button*/}\n                        </Form>\n                    </div>\n                </div>\n                {/*Feedback form*/}\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br/>\n                            Clear Water Bay, Kowloon<br/>\n                            HONG KONG<br/>\n                            <i className=\"fa fa-phone fa-lg\"/>: +852 1234 5678<br/>\n                            <i className=\"fa fa-fax fa-lg\"/>: +852 8765 4321<br/>\n                            <i className=\"fa fa-envelope fa-lg\"/>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\">\n                                <i className=\"fa fa-google-plus\"/>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-facebook\"\n                               href=\"http://www.facebook.com/profile.php?id=\">\n                                <i className=\"fa fa-facebook\"/>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\">\n                                <i className=\"fa fa-linkedin\"/>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\">\n                                <i className=\"fa fa-twitter\"/>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\">\n                                <i className=\"fa fa-youtube\"/>\n                            </a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\">\n                                <i className=\"fa fa-envelope-o\"/>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React from \"react\";\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"/>\n            <p>Loading...</p>\n        </div>\n    );\n};\n","export const baseURL = 'http://localhost:3001/';","import React from \"react\";\nimport {Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle} from \"reactstrap\";\nimport {Loading} from \"./LoadingComponent\";\nimport {baseURL} from \"../shared/baseURL\";\nimport {FadeTransform} from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return (\n            <Loading/>\n        );\n    } else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        )\n    }\n    return (\n        <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\n            <Card style={{width: '18rem'}}>\n                <CardImg src={baseURL + item.image} alt={item.name} aspectRatio=\"0.5\"/>\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md col-m1\">\n                    <RenderCard item={props.dish}\n                                isLoading={props.dishesLoading}\n                                errMess={props.dishesErrMess}/>\n                </div>\n                <div className=\"col-12 col-md col-m1\">\n                    <RenderCard item={props.promotion}\n                                isLoading={props.promosLoading}\n                                errMess={props.promosErrMess}/>\n                </div>\n                <div className=\"col-12 col-md col-m1\">\n                    <RenderCard item={props.leader}\n                                isLoading={props.leadersLoading}\n                                errMess={props.leadersErrMess}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem, Card, CardImg, CardImgOverlay, CardTitle} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {Loading} from \"./LoadingComponent\";\nimport {baseURL} from \"../shared/baseURL\";\n\nfunction RenderMenuItem({dish}) {\n    return (\n        <Link to={`/menu/${dish.id}`}>\n            <Card style={{width: '18rem'}}>\n                <CardImg width=\"100%\" object src={baseURL + dish.image} alt={dish.name}/>\n                <CardImgOverlay body className=\"ml-5\">\n                    <CardTitle heading>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Card>\n        </Link>\n    )\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div className=\"container\">\n                <div key={dish.id}>\n                    <RenderMenuItem dish={dish}/>\n                </div>\n            </div>\n        );\n    });\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Menu;","import {\n    Card, CardBody, CardImg, CardText, CardTitle, Breadcrumb, BreadcrumbItem, ModalHeader, ModalBody,\n    Label, Button, Modal, Row\n} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport React, {Component} from \"react\";\nimport {Control, Errors, LocalForm} from \"react-redux-form\";\nimport {Loading} from \"./LoadingComponent\";\nimport {baseURL} from \"../shared/baseURL\";\nimport {Fade, Stagger} from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst validRating = (val) => val !== \"\";\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.comment);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"> Submit comment </span>\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}> Submit comment </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\"\n                                                id=\"rating\"\n                                                name=\"rating\"\n                                                className=\"form-control\"\n                                                validators={{required, validRating}}\n                                                innerRef={(input) => this.rating = input}>\n                                    <option>{\"\"}</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                                <Errors className=\"text-danger\"\n                                        model=\".rating\"\n                                        show=\"touched\"\n                                        messages={{validRating: 'Value cannot be default. Please choose a rating'}}/>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\">Name</Label>\n                                <Control.text model=\".name\"\n                                              id=\"name\"\n                                              name=\"name\"\n                                              className=\"form-control\"\n                                              validators={{\n                                                  required,\n                                                  minLength: minLength(3),\n                                                  maxLength: maxLength(15)\n                                              }}\n                                              innerRef={(input) => this.name = input}/>\n                                <Errors className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 3 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}/>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea model=\".comment\"\n                                                  id=\"comment\"\n                                                  name=\"comment\"\n                                                  rows=\"6\"\n                                                  className=\"form-control\"\n                                                  validators={{required}}\n                                                  innerRef={(input) => this.comment = input}/>\n                                <Errors className=\"text-danger\"\n                                        model=\".comment\"\n                                        show=\"touched\"\n                                        messages={{required: 'Required'}}/>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction RenderDishDetail({dish}) {\n    return (\n        <Card className=\"col-12 col-md-5 m-1\">\n            <Fade in>\n                <CardImg width=\"100%\" object src={baseURL + dish.image} alt={dish.name}/>\n                <CardBody>\n                    <CardTitle heading>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Fade>\n        </Card>\n    )\n}\n\nfunction RenderDishComments({comments, postComment, dishId}) {\n    if (comments != null) {\n        return (\n            <Card className=\"col-12 col-md-5 m-1\">\n                <CardBody>\n                    <CardTitle heading>Comments</CardTitle>\n                        <CardText>\n                            <Stagger in>\n                                {comments.map((element) => {\n                                    const dateString = element.date;\n                                    const dateObj = new Date(dateString);\n                                    const newDate =\n                                        `${dateObj.toLocaleString('en', {month: 'short'})} \n                                                ${dateObj.getDay()}, ${dateObj.getFullYear()}`;\n                                    return (\n                                        <Fade in>\n                                            <li key={element.id}>\n                                                <p>{element.comment}</p>\n                                                <p>-- {element.author}, {newDate}</p>\n                                            </li>\n                                        </Fade>\n                                    )\n                                })}\n                            </Stagger>\n                        </CardText>\n                    <CommentForm dishId={dishId} postComment={postComment}/>\n                </CardBody>\n            </Card>\n        )\n    } else {\n        return (<div/>)\n    }\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        );\n    } else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        )\n    } else if (props.dish !== null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/menu\">Menu</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderDishDetail dish={props.dish}/>\n                    <RenderDishComments comments={props.comments}\n                                        postComment={props.postComment}\n                                        dishId={props.dish.id}\n                    />\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default DishDetail;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {baseURL} from \"../shared/baseURL\";\nimport {Stagger, Fade} from 'react-animation-components';\nimport {Loading} from \"./LoadingComponent\";\n\nfunction RenderLeader({leader}) {\n    return (\n        <div key={leader.id} className=\"col-12 mt-5\">\n            <Media tag=\"li\">\n                <Stagger in>\n                    <Fade in>\n                        <Media left middle>\n                            <Media object src={baseURL + leader.image} alt={leader}/>\n                        </Media>\n                        <Media body className=\"ml-5\">\n                            <Media heading>{leader.name}</Media>\n                            <p>{leader.designation}</p>\n                            <p>{leader.description}</p>\n                        </Media>\n                    </Fade>\n                </Stagger>\n            </Media>\n        </div>\n    );\n}\n\nconst About = (props) => {\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader}/>\n        );\n    });\n    if (props.leaders.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        );\n    } else if (props.leaders.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.leaders.errMess}</h4>\n                </div>\n            </div>\n        )\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr/>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par\n                        excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere\n                        else, it enjoys patronage from the A-list clientele in Hong Kong. Featuring four of the best\n                        three-star Michelin chefs in the world, you never know what will arrive on your plate the next\n                        time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain\n                        started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in\n                        a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <p/>\n                                <p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                        <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                            P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </p>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","export const ADD_DISHES = 'ADD_DISHES';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\nexport const ADD_COMMENTS ='ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_PROMO = 'ADD_PROMO';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n","import * as ActionTypes from \"./ActionTypes\";\nimport {baseURL} from \"../shared/baseURL\";\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseURL + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw new Error(error.message);\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('Post comments', error.message)\n            alert('Your comment could not be posted\\nError: ' + error.message)\n        })\n};\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n})\n\nexport const postFeedback = (firstName, lastName, telNum, email, message) => (dispatch) => {\n    const newFeedback = {\n        firstName: firstName,\n        lastName: lastName,\n        telNum: telNum,\n        email: email,\n        message: message\n    }\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseURL + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw new Error(error.message);\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addFeedback(response)))\n        .catch(error => {\n            console.log('Post feedback', error.message)\n            alert('Your feedback could not be posted\\nError: ' + error.message)\n        })\n};\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseURL + 'dishes')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw new Error(error.message);\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseURL + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw new Error(error.message);\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n    return fetch(baseURL + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw new Error(error.message);\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promotions) => ({\n    type: ActionTypes.ADD_PROMO,\n    payload: promotions\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseURL + 'leaders')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                throw new Error(error.message);\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n};\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});","import {Component} from \"react\";\nimport Header from \"./HeaderComponent\";\nimport Contact from \"./ContactComponent\";\nimport Footer from \"./FooterComponent\";\nimport Home from \"./HomeComponent\";\nimport Menu from \"./MenuComponent\";\nimport DishDetail from \"./DishDetailComponent\";\nimport AboutComponent from \"./AboutComponent\";\nimport {Switch, Route, Redirect, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {\n    postComment,\n    fetchComments,\n    fetchDishes,\n    fetchPromos,\n    fetchLeaders,\n    postFeedback\n} from \"../redux/ActionCreators\";\nimport {actions} from \"react-redux-form\";\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishId, rating, name, comment) =>\n        dispatch(postComment(dishId, rating, name, comment)),\n    postFeedback: (firstName, lastName, telNum, email, message) =>\n        dispatch(postFeedback(firstName, lastName, telNum, email, message)),\n    fetchDishes: () => {\n        dispatch(fetchDishes())\n    },\n    resetFeedbackForm: () => {\n        dispatch(actions.reset('feedback'))\n    },\n    fetchComments: () => {\n        dispatch(fetchComments())\n    },\n    fetchPromos: () => {\n        dispatch(fetchPromos())\n    },\n    fetchLeaders: () => {\n        dispatch(fetchLeaders())\n    }\n});\n\nclass Main extends Component {\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders()\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishesErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promosLoading={this.props.promotions.isLoading}\n                    promosErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leadersLoading={this.props.leaders.isLoading}\n                    leadersErrMess={this.props.leaders.errMess}\n                />\n            )\n        }\n\n        const DishWithId = ({match}) => {\n            return (\n                <DishDetail\n                    dish={this.props.dishes.dishes.filter((dish) =>\n                        dish.id === parseInt(match.params.dishId, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) =>\n                        comment.dishId === parseInt(match.params.dishId, 10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Header/>\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path=\"/home\" component={HomePage}/>\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}/>}/>\n                            <Route path=\"/menu/:dishId\" component={DishWithId}/>\n                            <Route path=\"/aboutus\" component={() => <AboutComponent leaders={this.props.leaders}/>}/>\n                            <Route exact path=\"/contactus\"\n                                   component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\n                                                             postFeedback={this.props.postFeedback}/>}/>\n                            <Redirect to=\"/home\"/>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Dishes = (state = {isLoading: true, errMess: null, dishes: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                dishes: action.payload\n            };\n        case ActionTypes.DISHES_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                dishes: []\n            };\n        case ActionTypes.DISHES_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                dishes: []\n            };\n        default:\n            return state;\n    }\n}\n\nexport const Comments = (state = {errMess: null, comments: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENT:\n            let comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        case ActionTypes.ADD_COMMENTS:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                comments: action.payload\n            };\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                comments: []\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport const Promotions = (state = {isLoading: true, errMess: null, promotions: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMO:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                promotions: action.payload\n            };\n        case ActionTypes.PROMOS_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                promotions: []\n            };\n        case ActionTypes.PROMOS_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                promotions: []\n            };\n        default:\n            return state;\n    }\n}\n\nexport const Leaders = (state = {isLoading: true, errMess: null, leaders: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                leaders: action.payload\n            };\n        case ActionTypes.LEADERS_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                leaders: []\n            };\n        case ActionTypes.LEADERS_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload,\n                leaders: []\n            };\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import {Component} from \"react\";\nimport Main from \"./components/MainComponent\";\nimport './App.css'\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {ConfigureStore} from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div>\n                        <Main/>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;","import {combineReducers, createStore, applyMiddleware} from \"redux\";\nimport {createForms} from \"react-redux-form\";\nimport {Comments, Dishes, Leaders, Promotions} from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport {logger} from \"redux-logger/src\";\nimport {InitialFeedback} from \"./forms\";\n\nexport const ConfigureStore = () => {\n    return createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({feedback: InitialFeedback})\n        }),\n        applyMiddleware(thunk, logger)\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}